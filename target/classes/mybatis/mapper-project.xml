<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.atcrowdfunding.project.dao.ProjectDao">
    <select id="pageQuery" resultType="project">
		select * from t_project
		<where>
			<if test="pageText != null">
				and name like concat('%', #{pageText}, '%')
			</if>
		</where>
		order by createdate desc
		limit #{start},#{size}
	</select>
	
	<select id="queryCount" resultType="int">
		select count(*) from t_project
			<where>
			<if test="pageText != null">
				and name like concat('%', #{pageText}, '%')
			</if>
		</where>
	</select>
		<insert id="insertProject">
		insert into t_project (
		name,remark,createdate
		) values
		(
		#{name},
		#{remark},
		#{createdate}
		)
	</insert>
	  <select id="queryById" resultType="project">
        select * from t_project where id = #{id}
    </select>

     <update id="updateProject">
           update  t_project
        set
            name = #{name},
            remark = #{remark}
        where id = #{id}
    </update>
    
    <delete id="deleteProject">
        delete from t_project where id = #{id}
    </delete>
    <delete id="deleteUsers">
       delete from t_project where id in
         <foreach collection="datas" item="project" open="(" close=")" separator=",">
            #{project.id}
           </foreach>
    </delete>
	<!-- <select id="queryRolePermissionByUser" resultType="permission"> select 
		* from t_permission where id in ( select rp.permissionid from t_role_permission 
		rp join t_user_role ur on ur.roleid = rp.roleid and ur.userid = #{id} ) and 
		id != pid order by seqno </select> <insert id="insertUser"> insert into t_user 
		( name,userpswd,sex,email,loginacct ) values ( #{name},#{userpswd},#{sex},#{email},#{loginacct} 
		) <selectKey keyProperty="id" resultType="int"> select @@identity as id </selectKey> 
		</insert> <update id="updateUser"> update t_user set name = #{name}, sex 
		= #{sex}, email = #{email}, loginacct = #{loginacct} where id = #{id} </update> 
		<delete id="deleteUserRole"> delete from t_user_role where userid = #{userid} 
		and roleid = #{roleid} </delete> -->
</mapper>